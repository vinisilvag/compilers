Terminais sem uso na gramática

    ELSE
    FI
    IF
    IN
    LET
    LOOP
    POOL
    THEN
    WHILE
    CASE
    ESAC
    OF
    DARROW
    NEW
    ISVOID
    STR_CONST
    INT_CONST
    BOOL_CONST
    OBJECTID
    ASSIGN
    NOT
    LE
    ERROR


Gramática

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' dummy_feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' dummy_feature_list '}' ';'

    6 dummy_feature_list: ε


Terminais, com as regras onde eles aparecem

    $end (0) 0
    ';' (59) 4 5
    '{' (123) 4 5
    '}' (125) 4 5
    error (256)
    CLASS (258) 4 5
    ELSE (259)
    FI (260)
    IF (261)
    IN (262)
    INHERITS (263) 5
    LET (264)
    LOOP (265)
    POOL (266)
    THEN (267)
    WHILE (268)
    CASE (269)
    ESAC (270)
    OF (271)
    DARROW (272)
    NEW (273)
    ISVOID (274)
    STR_CONST <symbol> (275)
    INT_CONST <symbol> (276)
    BOOL_CONST <boolean> (277)
    TYPEID <symbol> (278) 4 5
    OBJECTID <symbol> (279)
    ASSIGN (280)
    NOT (281)
    LE (282)
    ERROR (283)


Não terminais com as regras onde eles aparecem

    $accept (32)
        à esquerda: 0
    program <program> (33)
        à esquerda: 1
        à direita: 0
    class_list <classes> (34)
        à esquerda: 2 3
        à direita: 1 3
    class <class_> (35)
        à esquerda: 4 5
        à direita: 2 3
    dummy_feature_list <features> (36)
        à esquerda: 6
        à direita: 4 5


Estado 0

    0 $accept: • program $end

    CLASS  deslocar, e ir ao estado 1

    program     ir ao estado 2
    class_list  ir ao estado 3
    class       ir ao estado 4


Estado 1

    4 class: CLASS • TYPEID '{' dummy_feature_list '}' ';'
    5      | CLASS • TYPEID INHERITS TYPEID '{' dummy_feature_list '}' ';'

    TYPEID  deslocar, e ir ao estado 5


Estado 2

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 6


Estado 3

    1 program: class_list •
    3 class_list: class_list • class

    CLASS  deslocar, e ir ao estado 1

    $padrão  reduzir usando a regra 1 (program)

    class  ir ao estado 7


Estado 4

    2 class_list: class •

    $padrão  reduzir usando a regra 2 (class_list)


Estado 5

    4 class: CLASS TYPEID • '{' dummy_feature_list '}' ';'
    5      | CLASS TYPEID • INHERITS TYPEID '{' dummy_feature_list '}' ';'

    INHERITS  deslocar, e ir ao estado 8
    '{'       deslocar, e ir ao estado 9


Estado 6

    0 $accept: program $end •

    $padrão  aceitar


Estado 7

    3 class_list: class_list class •

    $padrão  reduzir usando a regra 3 (class_list)


Estado 8

    5 class: CLASS TYPEID INHERITS • TYPEID '{' dummy_feature_list '}' ';'

    TYPEID  deslocar, e ir ao estado 10


Estado 9

    4 class: CLASS TYPEID '{' • dummy_feature_list '}' ';'

    $padrão  reduzir usando a regra 6 (dummy_feature_list)

    dummy_feature_list  ir ao estado 11


Estado 10

    5 class: CLASS TYPEID INHERITS TYPEID • '{' dummy_feature_list '}' ';'

    '{'  deslocar, e ir ao estado 12


Estado 11

    4 class: CLASS TYPEID '{' dummy_feature_list • '}' ';'

    '}'  deslocar, e ir ao estado 13


Estado 12

    5 class: CLASS TYPEID INHERITS TYPEID '{' • dummy_feature_list '}' ';'

    $padrão  reduzir usando a regra 6 (dummy_feature_list)

    dummy_feature_list  ir ao estado 14


Estado 13

    4 class: CLASS TYPEID '{' dummy_feature_list '}' • ';'

    ';'  deslocar, e ir ao estado 15


Estado 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' dummy_feature_list • '}' ';'

    '}'  deslocar, e ir ao estado 16


Estado 15

    4 class: CLASS TYPEID '{' dummy_feature_list '}' ';' •

    $padrão  reduzir usando a regra 4 (class)


Estado 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' dummy_feature_list '}' • ';'

    ';'  deslocar, e ir ao estado 17


Estado 17

    5 class: CLASS TYPEID INHERITS TYPEID '{' dummy_feature_list '}' ';' •

    $padrão  reduzir usando a regra 5 (class)
